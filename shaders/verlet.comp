#version 460 core

layout(location = 0) uniform int n;
layout(location = 1) uniform float totalGM;
layout(location = 2) uniform float dt;
layout(location = 3) uniform float hr;
layout(location = 4) uniform float hz;

layout(binding = 0) buffer currPosBuffer{
    vec4 currPos[];
};
layout(binding = 1) buffer prevPosBuffer{
    vec4 prevPos[];
};

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
void main(){
    const uint gid = gl_GlobalInvocationID.x;
    if(gid < n){
        prevPos[gid].xyz = 2 * currPos[gid].xyz - prevPos[gid].xyz - totalGM * (1 - exp(-length(currPos[gid].xy) / hr)) * (1 - exp(-abs(currPos[gid].z) / hz)) / length(currPos[gid].xyz) / length(currPos[gid].xyz) * normalize(currPos[gid].xyz) * dt * dt;
    }
}